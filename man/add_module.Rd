% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/new_mod.R
\name{add_module}
\alias{add_module}
\alias{recover_app}
\title{Add new module}
\usage{
add_module(id, write = FALSE)

recover_app()
}
\arguments{
\item{id}{Identifier of the new module. Should be an abbreviation of the
title, i.e. "Data explorer" -> "exp" or "Case Study 5" -> "cs5"}

\item{write}{Whether to write the new code to files or just print it to
the console. Set to FALSE by default to prevent accidents.}
}
\description{
Adds a new module to the dashboard.
In particular, adds two new files \code{mod_{id}.R} and \code{txt_{id}.R}
and modifies two more files \code{app_ui.R} and \code{mod_main.R}. After
running this function, you should have a minimum working prototype of a
new tab that can be manually filled with content.

You need to run \code{devtools::load_all()} before using this function to
ensure that code files are editable.

\code{recover_app} recovers \code{app_ui.R} and \code{mod_main.R} from
the backup. Use this to return to the original state of the app if you
have messed something up after using \code{add_module()}.
}
\details{
Since this function modifies source code, run \code{devtools::load_all()}
after adding a new module. Otherwise, the changes made by this function will
not be immediately adopted.

Before modifying any code files, \code{add_module} stores the old files
in the folder \code{backup}.
}
\note{
These functions are not exported because they can only be used in developer
mode. To use these functions, run gretan from source.
}
